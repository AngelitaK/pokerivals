name: CI/CD Pipeline
on:
  workflow_dispatch:
  # this will trigger workflow whenever a change is pushed to main branch
  push:
    branches:
      - to-sync
jobs:
  build:
    name: Build Archive
    # Will run steps on latest version of ubuntu
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      # Set up JDK 8
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '21'
      # Set up Maven cache
      - name: Cache Maven packages
        # This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Build the application using Maven
      - name: Prepare AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # This is referred from Github Secrets
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # This is referred from Github Secrets
      - name: Build with Maven
        run: mvn -B package --file backend/pom.xml
      - name: Upload JAR
        # We upload so we can re-use same jar in next job.
        uses: actions/upload-artifact@v3
        with:
          # Name of artifact can be anything
          name: artifact
          # Relative path to jar file
          path: backend/target/pokerivals-0.0.1-SNAPSHOT.jar

  # Deploy jobs
  deploy:
    # Depends on build's job
    needs: build
    name: Deploy to Elastic Beanstalk
    # Will run steps on latest version of ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR
        # Download the artifact which was uploaded in the Build Archive's job
        uses: actions/download-artifact@v3
        with:
          name: artifact
      # Deploy the artifact (JAR) into AWS Beanstalk
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }} # This is referred from Github Secrets
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # This is referred from Github Secrets
          use_existing_version_if_available: true
          application_name: MarcoSathwikJoshuaAngelitaDylanRay # Application name we created in Elastic Beanstalk
          environment_name: MarcoSathwikJoshuaAngelitaDylanR-env # Environment name we created in Elastic Beanstalk
          version_label: ${{ github.SHA }}
          region: ${{ secrets.AWS_REGION }} # VERY IMPORTANT: AWS Region where initially Application was created in AWS EBS. We created in us-east-1 which is N-Virginia
          deployment_package: pokerivals-0.0.1-SNAPSHOT.jar # Download artifacts from previous job